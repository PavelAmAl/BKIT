import unittest
from main import Doc, Сhp, СhpDoc, function_1, function_2, function_3

# Документы
docs = [
    Doc(1, 'Рубежный контроль по БКИТ'),
    Doc(2, 'Домашнее задание по Правоведению'),
    Doc(3, 'Отчёт по практике УПСП'),
    Doc(4, 'Лекция по Экологии'),
    Doc(5, 'Курсовая работа по АСОИУ'),
    Doc(6, 'Ответы к РК'),
]

# Разделы
chps = [
    Сhp(1, 'Содержание', 159, 3),
    Сhp(2, 'Введение', 255, 3),
    Сhp(3, 'Основная часть', 1532, 1),
    Сhp(4, 'Заключение', 199, 3),
    Сhp(5, 'Приложение', 532, 5),
    Сhp(6, 'Ответы', 2222, 5),
    Сhp(7, 'Эпилог', 15, 4),
]

сhps_docs = [
    СhpDoc(1, 1),
    СhpDoc(2, 2),
    СhpDoc(3, 3),
    СhpDoc(3, 4),
    СhpDoc(3, 5),

    СhpDoc(4, 3),
    СhpDoc(6, 6),
    СhpDoc(5, 4),
    СhpDoc(2, 6),
    СhpDoc(7, 3),
]

class test_D(unittest.TestCase):
    # Тестирование задания 1
    def test_task_1(self):
        self.assertEqual(function_1(docs, chps),
                         [('Приложение', 532, 'Курсовая работа по АСОИУ'),
                          ('Ответы', 2222, 'Курсовая работа по АСОИУ'),
                          ('Эпилог', 15, 'Лекция по Экологии'),
                          ('Содержание', 159, 'Отчёт по практике УПСП'),
                          ('Введение', 255, 'Отчёт по практике УПСП'),
                          ('Заключение', 199, 'Отчёт по практике УПСП'),
                          ('Основная часть', 1532, 'Рубежный контроль по БКИТ')])
    # Тестирование задания 2
    def test_task_2(self):
        self.assertEqual(function_2(docs, chps),
                         [('Отчёт по практике УПСП', 3),
                          ('Курсовая работа по АСОИУ', 2),
                          ('Рубежный контроль по БКИТ', 1),
                          ('Лекция по Экологии', 1)])

    # Тестирование задания 3
    def test_task_3(self):
        self.assertEqual(function_3(docs, сhps_docs),
                          {'Ответы': ['Домашнее задание по Правоведению', 'Ответы к РК']})

if __name__ == '__main__':
    unittest.main()